estado_inicial(e([
               v(c(1),[1,2,3,4,5,6,7,8,9],_),
               v(c(2),[1],1),
               v(c(3),[1,2,3,4,5,6,7,8,9],_),
               v(c(4),[1,2,3,4,5,6,7,8,9],_),
               v(c(5),[1,2,3,4,5,6,7,8,9],_),
               v(c(6),[8],8),
               v(c(7),[1,2,3,4,5,6,7,8,9],_),
               v(c(8),[1,2,3,4,5,6,7,8,9],_),
               v(c(9),[3],3),
               v(c(10),[1,2,3,4,5,6,7,8,9],_),
               v(c(11),[1,2,3,4,5,6,7,8,9],_),
               v(c(12),[1,2,3,4,5,6,7,8,9],_),
               v(c(13),[6],6),
               v(c(14),[1,2,3,4,5,6,7,8,9],_),
               v(c(15),[9],9),
               v(c(16),[1,2,3,4,5,6,7,8,9],_),
               v(c(17),[1,2,3,4,5,6,7,8,9],_),
               v(c(18),[1,2,3,4,5,6,7,8,9],_),
               v(c(19),[7],7),
               v(c(20),[1,2,3,4,5,6,7,8,9],_),
               v(c(21),[1,2,3,4,5,6,7,8,9],_),
               v(c(22),[1,2,3,4,5,6,7,8,9],_),
               v(c(23),[1,2,3,4,5,6,7,8,9],_),
               v(c(24),[1,2,3,4,5,6,7,8,9],_),
               v(c(25),[1,2,3,4,5,6,7,8,9],_),
               v(c(26),[1,2,3,4,5,6,7,8,9],_),
               v(c(27),[4],4),
               v(c(28),[1,2,3,4,5,6,7,8,9],_),
               v(c(29),[1,2,3,4,5,6,7,8,9],_),
               v(c(30),[1,2,3,4,5,6,7,8,9],_),
               v(c(31),[1,2,3,4,5,6,7,8,9],_),
               v(c(32),[1,2,3,4,5,6,7,8,9],_),
               v(c(33),[4],4),
               v(c(34),[1,2,3,4,5,6,7,8,9],_),
               v(c(35),[1,2,3,4,5,6,7,8,9],_),
               v(c(36),[1,2,3,4,5,6,7,8,9],_),
               v(c(37),[1,2,3,4,5,6,7,8,9],_),
               v(c(38),[1,2,3,4,5,6,7,8,9],_),
               v(c(39),[1,2,3,4,5,6,7,8,9],_),
               v(c(40),[1,2,3,4,5,6,7,8,9],_),
               v(c(41),[3],3),
               v(c(42),[6],6),
               v(c(43),[1,2,3,4,5,6,7,8,9],_),
               v(c(44),[1],1),
               v(c(45),[8],8),
               v(c(46),[8],8),
               v(c(47),[1,2,3,4,5,6,7,8,9],_),
               v(c(48),[1,2,3,4,5,6,7,8,9],_),
               v(c(49),[9],9),
               v(c(50),[1,2,3,4,5,6,7,8,9],_),
               v(c(51),[1,2,3,4,5,6,7,8,9],_),
               v(c(52),[1,2,3,4,5,6,7,8,9],_),
               v(c(53),[1,2,3,4,5,6,7,8,9],_),
               v(c(54),[1,2,3,4,5,6,7,8,9],_),
               v(c(55),[1,2,3,4,5,6,7,8,9],_),
               v(c(56),[1,2,3,4,5,6,7,8,9],_),
               v(c(57),[1,2,3,4,5,6,7,8,9],_),
               v(c(58),[7],7),
               v(c(59),[1,2,3,4,5,6,7,8,9],_),
               v(c(60),[1,2,3,4,5,6,7,8,9],_),
               v(c(61),[1,2,3,4,5,6,7,8,9],_),
               v(c(62),[1,2,3,4,5,6,7,8,9],_),
               v(c(63),[1,2,3,4,5,6,7,8,9],_),
               v(c(64),[1,2,3,4,5,6,7,8,9],_),
               v(c(65),[1,2,3,4,5,6,7,8,9],_),
               v(c(66),[1,2,3,4,5,6,7,8,9],_),
               v(c(67),[1,2,3,4,5,6,7,8,9],_),
               v(c(68),[1,2,3,4,5,6,7,8,9],_),
               v(c(69),[1,2,3,4,5,6,7,8,9],_),
               v(c(70),[1,2,3,4,5,6,7,8,9],_),
               v(c(71),[3],3),
               v(c(72),[1,2,3,4,5,6,7,8,9],_),
               v(c(73),[1,2,3,4,5,6,7,8,9],_),
               v(c(74),[1,2,3,4,5,6,7,8,9],_),
               v(c(75),[1,2,3,4,5,6,7,8,9],_),
               v(c(76),[1,2,3,4,5,6,7,8,9],_),
               v(c(77),[1,2,3,4,5,6,7,8,9],_),
               v(c(78),[1,2,3,4,5,6,7,8,9],_),
               v(c(79),[1,2,3,4,5,6,7,8,9],_),
               v(c(80),[1,2,3,4,5,6,7,8,9],_),
               v(c(81),[1,2,3,4,5,6,7,8,9],_)], [])).

%Restricoes 
% Nenhum numero se repete por linha

ve_restricoes(E):- (ve_restricoes1(E) , ve_restricoes2(E), ve_restricoes3(E)).

% Não se repete por coluna
ve_restricoes1(e(Nafec,Afect)):- \+ (member(v(c(I),Di,Vi), Afect), member(v(c(J),Dj,Vj),Afect),  I \=J,
                                             % mod 9 verifica a que coluna pertence
                                             Vi=Vj , I1 is mod(I,9), J1 is mod(J,9), I1=J1 ). 

ve_restricoes2(e(Nafec,Afect)):- \+ (member(v(c(I),Di,Vi), Afect), member(v(c(J),Dj,Vj),Afect),  I \=J,
                                             Vi=Vj , 
                                             % no caso de ser o ultimo da linha e ser divisor o resto será zero é preciso compensar
                                             divisor(I, I1), divisor(J, J1), 
                                             I2 is I1 // 9, J2 is J1 // 9, J2 = I2). 
                                        
ve_restricoes3(e(Nafec,Afect)):- \+ (member(v(c(I),Di,Vi), Afect), member(v(c(J),Dj,Vj),Afect),  I \=J,
                                        Vi = Vj, casas(I,J) ).

                                       
%ve_restricoes(e(Nafect,[A])).

% Altera o numero se o mod for 0 (se este estiver na ultima linha),
% evitando a ultima coluna onde I//9 seria mais um que a restante linha
divisor(I, I1):- N is I mod 9, altera(N,I, N1), I1 is N1.
altera(N, I, N1):- N = 0, N1 is I - 1.
altera(N, I, N1):- N \= 0, N1 is I.

casas(I,J):-member(I,[1,2,3,10,11,12,19,20,21]), member(J,[1,2,3,10,11,12,19,20,21]).
casas(I,J):-member(I,[4,5,6,13,14,15,22,23,24]), member(J,[4,5,6,13,14,15,22,23,24]).
casas(I,J):-member(I,[7,8,9,16,17,18,25,26,27]), member(J,[7,8,9,16,17,18,25,26,27]).

casas(I,J):-member(I,[28,29,30,37,38,39,46,47,48]), member(J,[28,29,30,37,38,39,46,47,48]).
casas(I,J):-member(I,[31,32,33,40,41,42,49,50,51]), member(J,[31,32,33,40,41,42,49,50,51]).
casas(I,J):-member(I,[34,35,36,43,44,45,52,53,54]), member(J,[34,35,36,43,44,45,52,53,54]).

casas(I,J):-member(I,[55,56,57,64,65,66,73,74,75]), member(J,[55,56,57,64,65,66,73,74,75]).
casas(I,J):-member(I,[58,59,60,67,68,69,76,77,78]), member(J,[58,59,60,67,68,69,76,77,78]).
casas(I,J):-member(I,[61,62,63,70,71,72,79,80,81]), member(J,[61,62,63,70,71,72,79,80,81]).

%% escreve

esc(L):- sort(L,L1), write(L1), nl, esc1(L1, 1).
esc1([], _).
esc1([v(_,_,V)|R], N):- N=9, !,write( V ), nl, esc1(R, 1).
esc1([v(_,_,V)|R], N):- write( V ), N1 is N+1, esc1(R, N1).


% BACKSEARCHING


p:- estado_inicial(E0), back(E0,A), esc(A).

back(e([],A),A).
back(E,Sol):- sucessor(E,E1), ve_restricoes(E1),
                          back(E1,Sol).

sucessor(e([v(N,D,V)|R],E),e(R,[v(N,D,V)|E])):- member(V,D),
                                             fchecking(R,V,R1).


% FORWARD CHECKING
fchecking([],V,[]).

fchecking([v(N,D,_)|R],V,[v(N,D1,_)|R1]):- retira(V,D,D1),

	fchecking(R,V,R1).

retira(V,[],[]).
retira(V,[V|L],L).
retira(V,[A|L], [A|L1]):- V\= A, retira(V,L,L1).

